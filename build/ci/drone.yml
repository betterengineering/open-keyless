kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
  - name: test
    image: golang:1.16.5-stretch
    commands:
      - apt-get update && apt-get install -y libnfc-dev
      - make test-full
    volumes:
      - name: deps
        path: /go

  - name: build binary
    image: golang:1.16.5-stretch
    commands:
      - dpkg --add-architecture armhf
      - apt-get update && apt-get install -y libusb-0.1-4:armhf libc6-dev:armhf libnfc-dev:armhf libusb-dev:armhf libnfc5:armhf gcc-arm-linux-gnueabihf
      - make build-release
    volumes:
      - name: deps
        path: /go

  - name: build debian package
    image: lodge93/drone-fpm
    pull: always
    settings:
      name: open-keyless-controller
      version: 0.0.1-${DRONE_BUILD_NUMBER}
      input_type: dir
      output_type: deb
      architecture: armhf
      package: build/out/open-keyless-controller_0.0.1-${DRONE_BUILD_NUMBER}_armhf.deb
      deb_systemd: build/package/systemd/open-keyless-controller.service
      command_arguments: build/out/linux/arm/open-keyless-controller=/usr/local/bin/
    when:
      event:
        exclude:
          - tag

  - name: build debian package for release
    image: lodge93/drone-fpm
    pull: always
    settings:
      name: open-keyless-controller
      version: ${DRONE_TAG}
      input_type: dir
      output_type: deb
      architecture: armhf
      package: build/out/open-keyless-controller_${DRONE_TAG}_armhf.deb
      deb_systemd: build/package/systemd/open-keyless-controller.service
      command_arguments: build/out/linux/arm/open-keyless-controller=/usr/local/bin/
    when:
      event: tag

  - name: publish release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files:
        - build/out/open-keyless-controller_${DRONE_TAG}_armhf.deb
        - build/package/config.yml
        - scripts/install.sh
      checksum:
        - sha256
    when:
      event: tag

volumes:
  - name: deps
    path: /go
